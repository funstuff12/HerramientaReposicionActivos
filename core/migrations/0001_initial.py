# Generated by Django 5.1.7 on 2025-07-31 19:20

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='ID Cliente')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre')),
                ('city', models.CharField(max_length=100, verbose_name='Ciudad')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('terminos_contractuales', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Términos Contractuales (días)')),
                ('average_days_to_pay', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Días Promedio de Pago Real')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Creación')),
                ('observaciones', models.TextField(blank=True, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Maquina',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo', models.CharField(choices=[('Defender', 'Defender'), ('Challenger', 'Challenger')], default='Challenger', help_text='Defender (existente) o Challenger (potencial)', max_length=15, verbose_name='Tipo de Máquina')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre de la Máquina')),
                ('numero_serie', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número de Serie')),
                ('criticality_ranking', models.FloatField(blank=True, null=True, verbose_name='Ranking de Criticidad')),
                ('availability', models.FloatField(blank=True, null=True, verbose_name='Disponibilidad (%)')),
                ('date_in_service', models.DateField(blank=True, null=True, verbose_name='Fecha de Puesta en Servicio')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Precio de Compra')),
                ('installation_and_training_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Costo de Instalación y Formación')),
                ('setup_costs', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Costos de Configuración')),
                ('current_resale_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor de Reventa Actual')),
                ('salvage_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor Residual')),
                ('acquisition_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Costo de Adquisición (para Defender)')),
                ('book_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor en Libros')),
                ('machine_age', models.IntegerField(blank=True, null=True, verbose_name='Edad de la Máquina (años)')),
                ('equipment_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número de Equipo')),
                ('annual_maintenance_labor_parts', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Mantenimiento Anual (Mano de Obra y Piezas)')),
                ('initial_monthly_maintenance_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Costo Mensual Inicial de Mantenimiento')),
                ('maintenance_cost_gradient', models.FloatField(blank=True, null=True, verbose_name='Aumento Mensual del Costo de Mantenimiento')),
                ('cost_of_downtime', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Costo de Inactividad ($/h)')),
                ('operator_labor_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Costo de Mano de Obra del Operador ($/h)')),
                ('energy_consumption', models.FloatField(blank=True, null=True, verbose_name='Consumo de Energía (kWh/h)')),
                ('energy_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Costo de Energía ($/kWh)')),
                ('consumable_replacement_cost_1', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Costo de Reemplazo de Consumible')),
                ('consumable_lifespan_1', models.FloatField(blank=True, null=True, verbose_name='Vida Útil del Consumible (unidades)')),
                ('useful_life', models.IntegerField(blank=True, null=True, verbose_name='Vida Útil (meses)')),
                ('end_of_useful_life_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Fin de Vida Útil')),
                ('monthly_depreciation', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Depreciación Mensual')),
                ('production_rate', models.FloatField(blank=True, null=True, verbose_name='Tasa de Producción')),
                ('production_rate_units', models.CharField(blank=True, help_text='Ej: piezas/hora', max_length=50, null=True, verbose_name='Unidades de Tasa de Producción')),
                ('texas_workdays', models.IntegerField(blank=True, null=True, verbose_name='Días de Trabajo (Texas)')),
                ('monthly_operating_hours', models.FloatField(blank=True, null=True, verbose_name='Horas de Operación Mensuales')),
            ],
            options={
                'verbose_name': 'Máquina',
                'verbose_name_plural': 'Máquinas',
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='ID Proveedor')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre')),
                ('contacto', models.CharField(max_length=100, verbose_name='Contacto')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('terminos_pago', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Términos de Pago (días)')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Creación')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='AnalisisComparativo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre_analisis', models.CharField(max_length=200, verbose_name='Nombre del Análisis')),
                ('wacc', models.DecimalField(decimal_places=4, default=0.14, max_digits=5, verbose_name='WACC (Costo Promedio Ponderado de Capital)')),
                ('tax_rate', models.DecimalField(decimal_places=4, default=0.21, max_digits=5, verbose_name='Tasa de Impuestos')),
                ('financing_rate', models.DecimalField(decimal_places=2, default=7.5, max_digits=5, verbose_name='Tasa de Financiamiento (%)')),
                ('financing_months', models.IntegerField(default=60, verbose_name='Meses de Financiamiento')),
                ('pv_defender', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor Presente Defender')),
                ('eac_defender', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='EAC Defender')),
                ('pv_challenger', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Valor Presente Challenger')),
                ('eac_challenger', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='EAC Challenger')),
                ('recomendacion', models.CharField(blank=True, max_length=50, null=True, verbose_name='Recomendación')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('challenger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analisis_como_challenger', to='core.maquina')),
                ('defender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analisis_como_defender', to='core.maquina')),
            ],
            options={
                'verbose_name': 'Análisis Comparativo',
                'verbose_name_plural': 'Análisis Comparativos',
            },
        ),
        migrations.CreateModel(
            name='Registro',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='ID Registro')),
                ('fecha_entrega_cliente', models.DateField(verbose_name='Fecha Entrega Cliente')),
                ('valor_cobrar_cliente', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor a Cobrar')),
                ('fecha_limite_cobro', models.DateField(blank=True, editable=False, null=True, verbose_name='Fecha Límite Cobro')),
                ('estado_cobro', models.CharField(choices=[('pendiente', 'Pendiente'), ('pagado_parcial', 'Pagado Parcial'), ('pagado_total', 'Pagado Total')], default='pendiente', max_length=20, verbose_name='Estado Cobro')),
                ('obligaciones_data', models.JSONField(blank=True, default=list, help_text='Lista de obligaciones con proveedores', verbose_name='Datos de Obligaciones')),
                ('pagos_cliente_data', models.JSONField(blank=True, default=list, help_text='Lista de pagos recibidos del cliente', verbose_name='Datos de Pagos Cliente')),
                ('pagos_proveedor_data', models.JSONField(blank=True, default=list, help_text='Lista de pagos realizados a proveedores', verbose_name='Datos de Pagos Proveedor')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha Actualización')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Registro',
                'verbose_name_plural': 'Registros',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='FlujoCaja',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_equipo', models.CharField(choices=[('Defender', 'Defender'), ('Challenger', 'Challenger')], max_length=15)),
                ('año', models.IntegerField(verbose_name='Año')),
                ('cash_flow_bruto', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Flujo de Caja Bruto')),
                ('depreciacion', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Depreciación')),
                ('tax_shield', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Escudo Fiscal')),
                ('after_tax_cash_flow', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Flujo de Caja Después de Impuestos')),
                ('present_value', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Valor Presente')),
                ('analisis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flujos_caja', to='core.analisiscomparativo')),
            ],
            options={
                'verbose_name': 'Flujo de Caja',
                'verbose_name_plural': 'Flujos de Caja',
                'unique_together': {('analisis', 'tipo_equipo', 'año')},
            },
        ),
        migrations.CreateModel(
            name='TablaAmortizacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.IntegerField(verbose_name='Mes')),
                ('balance_inicial', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Balance Inicial')),
                ('pago_mensual', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Pago Mensual')),
                ('pago_principal', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Pago a Principal')),
                ('pago_interes', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Pago de Interés')),
                ('balance_final', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Balance Final')),
                ('analisis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tabla_amortizacion', to='core.analisiscomparativo')),
            ],
            options={
                'verbose_name': 'Tabla de Amortización',
                'verbose_name_plural': 'Tablas de Amortización',
                'unique_together': {('analisis', 'mes')},
            },
        ),
    ]
